name: Commnader_Wars_Release
on: [push]
    tags:
      - 'v*'
env:
  BUILD_TYPE: Release
  QT_Version: '6.2.1'
  
jobs:
  install:
    name: All
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest] # , macos-latest
        include:
          - os: windows-latest
            COMPILER_VERSION: 'win64_msvc2019_64'
            # 'win64_mingw81'
            target: 'desktop'
            asset_name: 'CommanderWars_Win64.zip'
          - os: ubuntu-latest
            COMPILER_VERSION: ''
            target: 'desktop'
            asset_name: 'CommanderWars_Ubuntu.zip'
          #- os: macos-latest
          #  COMPILER_VERSION: ''
          #  target: 'ios'
          #- os: windows-latest
          #  COMPILER_VERSION: 'android_armv7'
          #  target: 'android'
        
    runs-on: ${{matrix.os}}
    defaults:
      run:
        shell: bash
        
    steps:
    - uses: actions/checkout@v2
        
    - name: Install GStreamer
      run: |
        choco install gstreamer
        
    - name: Install Qt
      uses: jurplel/install-qt-action@v2    
      with:      
          aqtversion: '==2.0.2'
          target: ${{matrix.target}}
          version: ${{env.QT_Version}}
          arch: ${{matrix.COMPILER_VERSION}}
          modules: 'qtmultimedia'
          dir: '${{ github.workspace }}/qt/'
          install-deps: "true"
          
    - name: Configure CMake
      env:
          CMAKE_PREFIX_PATH: ${{env.Qt6_Dir}}          
      run: cmake -B '${{github.workspace}}'/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_INSTALL_PREFIX='${{github.workspace}}'/install
    
    - name: Build
      working-directory: ${{github.workspace}}/build
      run: cmake --build '${{github.workspace}}'/build --config $BUILD_TYPE --target install -j16
#----------------------------------------------------------------------------------------------------------------------------------------------
# release creation and upload part
#----------------------------------------------------------------------------------------------------------------------------------------------
    - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: | 
            Latest Commander Wars Release 
            See the github wiki for the related change log:
                https://github.com/Robosturm/Commander_Wars/wiki
          draft: false
          prerelease: false
    - name: build artifacts
        # todo create zip artifact
    - name: upload artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:          
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: '${{github.workspace}}'/install/${{env.BUILD_TYPE}}/Commander_Wars.zip
          asset_name: ${{matrix.asset_name}}
          asset_content_type: application/zip